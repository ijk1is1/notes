lesson1
	前后状态的不同，我们称之为交互效果。
	.后缀不影响文件，系统会根据.后缀来识别你。
	hyperText markup language 超文本标记语言		
		专业素养。(学术精准。)
	一对对标签组成。有特定的功能、语法含义。头标签伪标签。

	根标签
	结构化标签
		两个结构化的 <head>思想类的东西，给浏览器看 "编码字符集" "历史记录?"
		<body> 展示给用户
<html lang="en">
	<head>
		
		<meta charset="utf-8">	
			给浏览器指定一个"字典"，编码字符集。
			gb2312 亚裔语言。只有简体中文，没繁体。
			gbk 国家标准版本。包含了繁体中文字符集，
			unicode  万国码
			utf-8 8bit。

		<title></title>
		<meta content="服装" name="keywords">
		<meta content="这是一个你穿了不想脱的衣服" name="description">
	</head>
	<body>
		lang="en"
			<!--告诉搜索引擎爬虫，我们的网站是关于什么内容的-->
		关键字协议
		竞价排名
			tom ford。
			30-50元/次。转化率
			1 - 999
			高转化率行业。

			ip段锁定。
			生物行为。

		科技外包
		SEO搜索引擎优化
			爬虫的洗号。
	</body>
</html>

	段落标签，内容成段显示 paragraph。
	h${标题}*6
		报纸展示的标题的。
		独立成一段，大小
		加粗字体
	strong  家族
	em 斜体
		是可嵌套的。
	HTML本来是来处理文字信息的。
	<del>￥50</del>
	<address></address>
		成段展示和斜体。
		<p>
			<em></em>
		</p>
	<div>
		独占一行。
	<span> 没效果。
		衣柜。书柜。是一个容器。
		充当容器，给页面分块。页面更结构化。好维护，好写。结构化。（每个区功能分明）	
		捆绑操作，绑定操作的作用。

课时二
	header标题，报刊的标题。
	独占一行，加粗，斜体   p>strong>em。

	容器类元素：结构化，分门别类；绑定化操作。
	----
	成哥              很帅
	1.<div></div>空格的含义，换行
		1个例子，浏览器无法识别是一个单词还是一个单词，溢出时无法换行。汉字可以。
		编辑器中的空格 含义： 英文单词分隔符。不是空格 文本。

		英文单词分隔符
		html编码
		&nbsp;一个空格文本
		<div> 有语法含义无法展示。  &lt; &gt; less than/great than 程度上的比较。
	2.回车
		a<br>表示一个换行符
		不符合预期呀，不成对出现？
		标签成对，致力于将包裹的文本作用成它想要作用的样子。
		不需要修饰的，自己就是功能的就是单标签
		<meta> <br> <hr>水平线
	3.标签
		有序列表
		ol>li
		<ol type=""> 1,a,A,i,I
				罗马数字，
			reversed="reversed"   reverse-flash
			start="" 数字

		无序列表
		ul>li
			type  disc ( discircle ) square circle

			父子结构 功能>功能子项
			柜子>抽屉
				结构和样式 和 ul>li 差不多
				可维护性或通用性更好

		img
			src="图片的资源地址"   style="width:200px;"
				url，本地的绝对路径，本地的相对路径。
					html文档和图片成绝对关系。
			alt="这是范爷" 没法弥补损失
				"图片占位符"
				容错信息。
				地址都是资源方给我们的。有报错的可能。
				图片是为了展示文字展示不了的东西，。
			title="图片提示符"
				"图片提示符"

		a标签
			1.超链接			
			< href="">www.baidu.com</a>
				展示给用户看。
			hyperText reference
			超文本引用，想指定的资源地址。
			
			拿技术实现的就能拿技术更改。
			包裹任何东西，包裹的将“被引用”
			target=""
				_blank。
			2.anchor -- 锚
				记录一个位置。
				作为锚点记录位置来使用。
				连续页，没跳转的页。
			3.打电话
			href="tel:15776648357" 给
			发邮件  mailto:15776648357@163.com。

			4.协议限定符
			<a href="javascript:while(1){window.alert("让你手欠")}">点我啊</a>  
			有责任感的程序员。为天地立心，为生民立命，为往圣继绝学，为万世开太平。横渠四句。
				加书签的功能。



		form表单
			前端工程师和后端工程师发送信息的方式
			method="get/post"
			发送给谁，地址
			action=""
			<form method="" action="">
				<input>

			</form>
			这仅是有了架子。还需要组件
				表单中的(input) 组件。
				输入框：  input	type="text"  name="username"
				密码框： input type="password"   name="passward"
				

				p标签的语义，成段展示。格式上美观，成段展示的。
					语义化好： 易维护。
					公司的章程，公司的开发规范。 导航栏写ul>li 

			input type="submit" value="提交"
			提交是否 如何成功来看：
				发送数据：数据的主体，数据名称--数据值，数据内容
				当提交完，发现网页地址栏变化，是提交成功的表现   ?username=sunny&password=123

			密码框：只对用户不可见。
				数据报摘要 算法 md5
				抓包拦截。   加密安全。

			还可以发送信息的输入框：radio。
				看作一道题，题目一致， name="star"


编程思想和编程工具。将思想利用工具量化出来。
量化思维的过程。   

课时三
	回顾
	form表单里有很多组件来一起搭个伴做事。
		数据名，数据值。的传送
	单选框
		题目的选项 name保证一样。
		1.apple<input type="radio" name="fruit" value="apple">
		2.orange<input type="radio" name="fruit" value="orange">
		3.banana<input type="radio" name="fruit" value="banana">
	复选框
		type="checkbox"


	来讲一个企业级应用
		<form method="get" action="">
		<h1>选择性别
		</h1>
		male:<input type="radio" name="sex" value="male">
		female:<input type="radio" name="sex" value="female">

		<input type="submit" value="提交">
		</form>

		产品要有几个特点
			刚需，用户体验感好，用户粘性（使用方法等问题）
			懒操作：减少用户的操作，培养用户的懒习惯。
			默认选中的话，就能减少用户的操作。
			---> 实现默认选中。

			checked属性。 checked="checked"。
				复选框也OK。


	form最后一个组件
		<select name="province">
			<option></oprion>
			<option></oprion>
			<option></oprion>
		</select>
			这儿我们要写数据名。写在select里于情于理 都合适。于法也更合适。代表一道题的题干
			数据值的话也就放在 option中，value属性的值要优先。
			可设置每个选项都是成哥。
			<select name="选择最喜欢的人">
				<option value="成哥">贝克汉姆</option>
				<option value="成哥">成哥</option>
			</select>

	我们讲了很多标签，html css js是不同语言。都希望包含更多的内容。
		如：h5的video 标签。

	成哥：面试的初筛。
		和浏览器打交道很多。
	tip:	问题：主流的浏览器和内容
			IE      trident
			chrome  webkit
			safari  blink
			主流浏览器，有一定的市场份额，必须有独立研发的内核。

		答案：shell + 内核

			IE                trident 三叉戟
			Firefox           Gecko   壁虎，变形
			Google chrome     Webkit/blink(2014投入市场)  眨眼睛，闪烁，一瞬间	
			Safari 冲浪        Webkit
			Opera丹麦人开发的   presto  说变就变。

	注释 comment
		1.写备注 这是关于。。。的功能<!-- -->
		  标注解释
		2.调bug，调试。
	工程师
		产品经理拿产品原型， 设计师，运营，测试 的 沟通。

		评估周期：
			项目开发时间 * 3/3.5。项目的一个周期。保证抗风险能力。
			1/4 的时间开发。

	html    css    javascript
	结构    样式    行为

	css依赖于html。
		cascading style sheet  层叠样式表
	一、引入css
		1.行间样式
			<div style="
				width:100px;
				height: 100px;
			"></div>	
		2.页面级css
		head里写style标签
		<style type="text/css">
			div{
				width: 100px;
				height: 100px;
				background-color: #0f0;
			}
		</style>
		压场，过场。
		3.外部css 文件
			css文件里
				div{
					width: 100px;
					height: 100px;
					border-radius: 50%;
					background-color: black;
				}
				head标签里写 link标签。两个属性告诉浏览器要引入js文件，js文件的地址 hypertext reference。


	二、服务器和客户端
		数据传输两端的区别。
		代码下载到本机去执行。
			下载点儿，执行点儿。
			原有的线程继续执行，内核会给css的下载再建一个线程。---> 异步加载

			异步的
			同步的
				计算机的同步和异步。
				synchronize 同步的
				asynchronize 异步的

	三、选择器
		成哥有电影票，要给一个人。
		选择器
			css如何选择HTML 元素。
		1.	id选择器，元素的头标签上 id="名字"
				#only {
					background-color: #f00;
				}

			一个人给俩号也不行。
			一一对应的。东西。
				beast roseOnly。 darryRing的一个forever系列。
				1克拉100分。 汪峰送章子怡1500万。

				色阶问题。 d e f ......
		2.  class 选择器 老邓找不到了。通过特征，特点来获得HTML元素
			class="demo"
			.demo {
				background-color: yellow;
			}

			你和衣服是多对多的。 一个元素有多个class。
			一个class 可以有多个元素使用。
			<div class="demo demo1"></div>
				被两个class 选中并且作用上效果。
		3.标签选择器
			选择一批人，如选出一个班的男生。
			span><div><span></div>
			span {
				color: #f40;
				font-weight: bold;
			}
			无论套的多深，都将选中。全国所有男人，屋里的也算。

		4.通配符选择器 any 任意 全局的标签。
			* {
				background-color: green;
			}

		5. 属性选择器
			[id] 有 id 属性的元素。
			[id="only"] {}
		对比这几个选择器的优先级
			通过id #only .demo 类选择器 选中 某个/些 元素。
			!important > 行间样式 > id > class | 属性 > 标签选择器 > 通配符

	tips: css权重
		!important      infinity   
		行间样式         1000
		id              100
		class|属性|伪类  10
		标签| 伪元素     1
		通配符           0
						256进制

		计算机中 Infinity 是定量值，表示为无穷大。


课时5
	复习回顾
	复杂选择器的计算。用权重。
		<div><span>123</span></div>
	1.父子选择器/派生选择器
		真正要选的在后边，前边是他的限制条件。
		父子选择器的每一个层级都没有必要是标签选择器。只需父子关系成立。直接或间接都成立。
		div span{
			background-color: red;
		}
	2.直接子元素选择器
		div下面的直接一级子元素em。
		div > em {
			background-color: green;
		}

		问题：section div ul li a em {
			background-color: red;
		}
			做成了一个元素嵌套的 树。 自右向左的顺序遍历。
			

	3.并列选择器
		<div>1</div>
		<div class="demo">2</div>
		<p class="demo"></p>

		用多个条件并列到一起，不加空格进行限制的 选择器。不断缩小范围。

		问题：
			div.classDiv#idDiv>p.classP#idP

			接下来我们来修饰他。

		只要出现在同一排的选择器，就把他们的权重相加。符合先来后到。

	4.分组选择器
		将n个选择器分组，共用同一个代码块。
		em{
			background-color:red;
		}
		strong{
			background-color:red;
		}
		em, strong, span{
			background-color: red;
		}
		一般这么写：
			em,
			strong,
			span{
				background-color: red;
			}

		.demo1{
			background-color: red;
		}
		.demo2{
			background-color: green;
		}
		哎，这个元素，给你个颜色，再给你个宽高。 这不会覆盖。

	二、css 代码块
		写在选择器的后边。
		属性名和属性值 以 : 连接，每个属性以;分割。
		div{
			font-size: 12px;
			font-weight: bold;
		} 
		任何编辑工具设置字体的是高度。
		font
			font-size: 
				浏览器默认的字体是16px。
			font-weight: 
				100-900。
				lighter, normal 400, bold--> 700, bolder 

				跟字体包有关，是否有bolder 这个级别。
				记不住，用字典。
			font-style:
				italic;
			font-family:
				arial;
				乔布斯发明的。
				cursive。这个字体给中文设置，很好看。
			color:
				#f40;

				1.土鳖式 (纯英文单词) 测试用。
				2.颜色代码 人能看3个颜色。皮皮虾32种颜色。
					光学三原色。
						r      g      b
						饱和的拼到一起，是白光，看不见。
					每两位代表一个颜色。
						00-ff(颜色的饱和程度)
						#000000 红。绿。蓝 的饱和程度为0。
					颜色代码的每两位都重复，就可简写为3位的。

					15年，xila葡萄。葡萄酒有个单宁。单宁能抗氧化。 
					勃艮第区   罗曼蒂康迪。酒庄。 
					5大酒庄。

					阿里巴巴logo。是个笑脸。
						#f40。这个颜色是经过评选的。

				3.颜色函数
					rgb(0, 0, 0);

		border:
			1px solid black;复合属性。
			width: 0;
			height: 0;
			border-width: 2px;
			border-style: solid; dotted/dashed  点状虚线/条状虚线。
			border-color: #000;
			border-left-color: red;
			border-top-color: green;
			border-right-color: blue; 
			border-bottom-color: transparent;

课时6
	回顾
		div{
			width: 100px;
			height: 100px;
			border: 1px solid black;
			border-width: 10ppx;
			border-style: dotted;
			border-color: red;
			// 或
			border-left-width: ;
		}
		边框和边框的交界是个斜线。

	一、 修饰文本
		这个框由内容撑开。<div>新浪新闻</div>
		text-align: 
			center; right;
		/*
		css只有块注释。
		 */

		单行文字所占高度，文本的行高。(word中的行间距。)
			line-height: 20px;
		问题：单行文本在容器中水平居中。
			两种方法。padding 也可以。

		text-indent: 2em;
		em
			1em = 1 * font-size;
			          该标签的font-size。
			       1个文本的高度。(宽度)
			1.2倍行高
				1.2em。
			单位：xx给出的衡量标准。	
			绝对单位和相对单位。
			px，像素
				1个像素只能展示一个颜色。
				屏幕的分辨率，每英寸垂直方向能展示的像素点数。
				1个像素点，同一时间只展示一种颜色。
				相对单位。

		text-decoration:
			line-through; none; underline; overline;

			开发标准： 行为，结构，样式相分离。
			del 原价50元
			span 原价50元
				span{
					text-decoration: line-through;
				}
			span{
				color: rgb(0, 0, 238); a标签的颜色。
				text-decoration: underline;
				cursor: pointer; /help/e-resize/w-resize/copy/move
			}
			
	二、伪类选择器
		先选中某个标签。
		a:hover{
			color: orange;
		}
		搜索词条。query
			前后端连接时候会用到搜索词条。一个词条给搜索出多少东西。前端来设置这个样式。

		选择到某个元素的选择器:hover{} 给这个选择器加鼠标移入效果。

		a: hover{
			background-color: #f40;
			color: #fff;
			font-size: 16px;
			font-family: arial;
			font-weight: bold;
			border-radius: 10px;
			text-decoration: underline;
		}

	三、归类总结
		1.行级元素、内联元素 inline
		feature: 内容决定元素位置
				 不可以通过css改变宽高
		span strong em a del

		2.块级元素   block
		feature: 独占一行
				 可以通过css改变宽高

		div p ul li ol form address

		3.行级块元素  inline-block;
		feature: 内容决定大小
				 可以改宽高
		图片img，只设置一个宽或高。在不知道比例的情况下避免拉伸。 后边能站人吗？占多大地方。

		display:
			inline; block; inline-block;
			通过这个css属性来控制元素的样式，来改变原先元素的特点。

	tip: img 标签并排时，有缝隙。4px。
		怎么触发：凡是带有 inline 的元素都有文字特性。
		解决： margin-left: -4px;不一定这么大。border设为0 。？

		压缩代码：
			img这些单词用 1个字母代替。叫gz压缩?
			去空格去回车。

	tip: 一个工程师的开发经验：
		1.拟定一个元素，然后做装修。
		2.有一点想法，知道编出什么东西。先定义功能，后选配。
			每个功能(css) 都完成一定功能。相当于一个功能列表。
			更多样灵活。符合模块化开发的流程。

			先定义功能，后让别人引用。
			用别人的css 工具库。

			先读文档，理解写的为啥那么好。

			底层开发框架组。

		自定义标签，
			初始化标签。标签选择器的用法。
			习主席。搜索，百度，关键词是红。

			em{
				font-style: normal;
				color: #c00;
			}
			ul{
				list-style: none;
				padding: 0;
				margin: 0;
			}

			再递进一下。通配符选择器。
				初始化所有标签。 margin padding。不想要。
				不用分组选择器的原因。
				通配符选择器的权重是0。其他选择器想改直接就改了。

		库文件：
			初始化标签。
			自定义功能。


	tip:
		盒子模型。
		针对HTML每一个元素的，都符合盒模型语法特点。
		盒子三大部分：
			盒子壁 border
			内边距 padding
			盒子内容 width + height;

			margin 我们和其他盒子的距离。
		margin + border + padding + (content = width + height)

		Chrome浏览器控制台。
			Element ，HTML和css 调试控制台。
			两个盒子依然是嵌套关系，不过是大小一样。

		padding:
			100px;  复合属性。
			padding-left: 100px; 自然就撑开了。

		盒模型的计算。
			可视区的大小。
			realWidth : 160px
			realHeight: 160px

		远视图的制作。

	tip: 
		层模型。
		定位position
		absolute; 让元素变为可以被定位元素。
		left: 100px;
		top: 100px;
		计算机的y轴 是自上向下的。
		bottom: 下边线距离浏览器的底儿。很少选。

		body
			有个自有的 很多浏览器中 margin为8px。

		opacity: 0.5;
		第一个div 变成可定位元素。

		1.absolute
			(同一个点，不同层面。)
			脱离原来位置进行定位。
			(原来位置释放了。)
			相对于最近的有定位的父级进行定位，如果没有，那么相对于文档进行定位。
		2.relative
			保留原来位置进行定位。
			相对于自己原来的位置进行定位。
			(不影响后续元素)

			例子： div.wrapper>div.content>div.box
		完成定位的条件：参照物，有个定位。

		必须减少对后续元素的破坏。
		relative 做参照物， absolute 做定位。
					基架		          定位技术。

		3.fixed
			广告定位。
			<div>增强老邓身体机能的神奇药物。</div。
			你怎么动，他都不动。

			文档一屛的话。有滚动的话(就固定下定位)
				div{
					position: absolute;
					left: 50%;
					top: 50%;
					width: 100px;
					height: 100px;
					background-color: red;
					margin-left: -50px;
					margin-top: -50px;
				}
				负值，就镶在墙里了。半个身位。

		z-index: 1; 层模型。

			五环。让五环在屏幕中间居中。

课时7
	回顾:
		五环。五环是一个整体，必须在一个舞台上布置。

		<div class="plat">
			div.circle1$*5	
		</div>

		css:
			先初始化标签。
			分组选择器，共用一块代码。就是用来简化代码的。
			.circle1,
			.circle2{
				width: 100px;
			}
			这个圆脱离原来位置，串到了第一个圆的位置上。

			居中这5个圈。也就是居中这5个圈所在的容器。
			这个容器没有被撑开，是因为作为内容的都是绝对定位元素已经脱离原来位置定位的，不在这个容器所在的空间了。父级容器没有撑开。

			absolute了，但是缺少参照物。父级也有个定位。relative?不影响其他元素，但是是相对于自身定位的。没办法居中到浏览器中间。 改成absolute。
			相对于文档居中，就absolute。 相对于视口居中，就fixed。

	tip:
		两栏布局
			要求： 一个固定，一个自适应。
			让一栏定位过去；让后边被压住的部分让出来。
			自适应元素让出距离，另一个元素定位过去。
			看起来两栏不行，不能把内容压住。

			为啥先写 right。结构反过来可以吗？
			这样会： 黑色区域先出生，粉色区域后出生。
			粉色区域调完position后，虽然脱离原来位置，但出生位置是第二行。

	tip:
		两个经典bug。 
		margin塌陷-问题描述：
			父亲带着儿子往下走。
			儿子也margin-left: 50px; 但是在margin-top的 时候，不相对于父亲的顶边往下走。 
			父子嵌套的元素，垂直方向的margin，父子元素是结合到一起的，margin取最大值。
			子级相对于父级，好像没有顶一样，margin塌陷。

		解决(没办法解决，只能是弥补,因为可能会触发新的问题)：
			1.给父级加个线，border，子级就可以了。
			手法残暴，不专业。
			语法上，编程手法上不专业。产品经理不让。
			不可行。
			2.改变父级(这个大盒子)的渲染规则，让他变为bfc。针对需求，哪个没影响，就用哪个。
			

		tip:
			bfc block format context
				每个盒子里有一个完整的渲染规则。通过手段改变盒子的渲染规则。
				触发bfc 后，特定的盒子会遵循另一套语法规则。
				改变一丁点的规则。就解决了 margin塌陷。

			如何触发一个盒子的bfc?
				position: absolute; 
				display: inline-block;
				float: left/right;
				overflow: hidden; (溢出盒子的部分隐藏展示)

				这个盒子就变成bfc元素了。针对需求，哪个没影响，就用哪个。

		margin合并-问题描述
			<span>123</span>
			<span>234</span>
			区域不能共用。两个span 刚开始是有文本分隔符的。
			margin-left,和margin-right。
				《战略》
					美特涅
					世界上没有永恒的敌人，没有永恒的朋友。
					保证敌人和敌人的矛盾大于 敌人和我们的矛盾。
					不利的矛盾过渡到对我们有利的矛盾。

			正常情况下是不能共用的。
				div  margin-bottom: 100px;
				div  margin-top: 100px;
				兄弟关系。

		解决：
			1.给其中的1个div或两者都加个div，让该div 变成bfc元素。
			加HTML 和css。
			每一块HTML 叫结构，不能随便改结构。不可行。
			2.不解决。垂直方向的margin合并。直接计算就好。

	tip:
		浮动模型。
		float: left/right;
			语法：。
			文字环绕效果。 让元素站队。
			效果：
				1.浮动元素产生了浮动流。
				所有产生了浮动流的元素，块级元素看不到他们；
				产生了bfc的元素和文本类属性(带有inline)的元素以及文本都能看到浮动元素。

		包裹浮动元素-例子：
			把容器的宽高都去掉，变成自适应容器了。内容会撑开容器。宽度没限制，高度会撑开。

			div.wrapper>div.content*3

			.content{
				float: left;
			}
			为什么父级没有包住浮动的子级元素？
				浮动元素产生了浮动流，浮动流对块级元素有影响。
				块级元素看不到浮动元素。

			解决：
				1.父级元素加个高。解决一小部分问题，不健康的解决办法。 后端传来了更多数据时就不可行。

				2.清除周边的浮动流。
				p{
					border-top: 0 solid black;
					clear: both;
				}
				逻辑上在这儿出生，就能清除，把父级撑开。
				最后一个元素的逻辑上的后边。

课时9
	回顾：
		包裹浮动元素。

		HTML代表的是结构。咱们真正的解决bug，弥补一个问题。不能随便修改结构。

		!importan
		行间样式
		id
		class|属性|伪类
		标签|伪元素
		通配符

	伪元素
		tag element
		天生存在于任意一个元素里。会伴随元素出生。
		span::before{
			content: "成哥";
		}
		修改样式结构。可以被css操作，但不存在在HTML里。
		span::after{
			content: "，是的，的确是这样。"
		}
		没有确切的结构，只能通过操作css属性。content

		天生的行级元素。inline的
		改成 display:inline-block; 就可以。

		.wrapper::after{
			content: "";
			clear: both;
			display: block;
		}
		.wrapper选中的元素，逻辑上的最后一个位置。

	要使得clear属性生效的话。必须是对块级元素加上才可以。

	触发了bfc的元素，文本类元素和文本，都能看到浮动元素。

	tip:
		设置了position: absolute; float: left/right;
		会在内部把元素转换成 inline-block元素。宽高由内容撑开。

		例子: 
			<span>123</span>
			span{
				position: absolute;
				width: 100px;
				height: 100px;
				background-color: red;
			}
			刚开始是不能变宽高的，设置了position: absolute 或者 float 后就可以了。


	tip:
		浮动：
		css2.0 1999，08年3.0。
		报纸布局。
		img后放点文字。刚开始是底对齐的。设置float后，后边文字就顶对齐了。

	例子：
		ul>li*3
			天猫
			聚划算
			天猫超市

			ul.nav
				li.list-item
		css内容
			*{
				margin: 0;
				padding: 0;
				color: #424242;
				font-family: arial;
			}
			a{
				text-decoration: none;
			}
			.nav{
				list-style: none;
			}
			.nav .list-item{
				float: left;
				margin-left: 10px;
			}

			是有a 标签的吧？来个空锚点占位。居中,来个border 参考。
			li 不能定宽的。我们来加padding。

		父级元素包裹浮动元素。都清除浮动流。消除浮动流带来的影响。
			.nav::after{
				content: "";
				display: block;
				clear: both;
			}


课时10
	tip:
		溢出容器，要打点展示

		1.单行文本
			文字足够容器宽度的时候就展示出来。
			white-space: nowrap;
			over-flow: hidden;
			text-overflow: ellipsis;
		2.多行文本
			前端工程师把容器的宽高，字的大小计算好。给后端，后端计算好。用...实现。
			PC端不实现。针对老版本浏览器实现。
			移动端来实现。

			多行不打点，只做截断处理。
				容器高和行高，计算一下。
				容器 overflow: hidden。

	tip:
		背景图片处理
			width: 200px;
			height: 200px;
			border: 1px solid black;
			background-image: url(fy.jpg);
			background-size: 100px 100px;
			background-repeat: no-repeat;
			background-position: 100px 100px;
				left top center ; center center
				50% 50% 也会居中。

		以图换字
			图片的用途。有的图片来自资源方。

			<a></a>
				display: inline-block;
				text-decoration: none;
				color: #424242;
				width: 190px;
				height: 90px;
				border: 1px solid black;
				background-image: url();
				background-size: 

			一旦浏览器采取了默认加载策略，我们的网站也要好使。css, javascript屏蔽掉。

			1.三件套
			  	text-indent: 190px;
			  	white-space: nowrap;
			 	overflow: hidden;
			2.padding 能把容器撑开，也能放背景图片。
				容器的高 height: 0
						padding-top: 图片的高;
						overflow: hidden;

		规则：
			行级元素只能嵌套行级元素
			块级元素可以嵌套任何元素
			p标签里不能套块级元素
				会被截断。
			a标签里不套 a标签。

	作业：写个淘宝网的首屏。

课时11 
	一个特别的辅助工具。
	公众号。
		定位宗旨： 学习的生态系统。
			人生不只有技术。

课时12
	css补充
		div.wrapper>div.content

		*{
			margin: 0;
			padding: 0;
		}
		.wrapper{
			height: 30px;
			background-color: black;
		}
		.content{
			width: 1200px;
			margin: 0 auto;
			height: 30px;
			background-color: #0f0;
		}

	凡是带有inline的元素都有文本的特点，叫文本类元素。

	img元素容忍中间有空格了。
		inline-block。 属于文本类元素。所以有 文字分隔符。

	position: absolute; float: left/right;
	元素会被设置为 display: inline-block;

	文本对齐方式。
		1.文本放一起，会底对齐
		2.图片和文字放一起
			<img>呵呵
				文本类元素，和文本一样，都会体现出底对齐。

		3.<span></span>呵呵
		一个行级块元素或者一个文本类元素里边有文字了。外部文字会和里边文字底对齐。

	调一行元素的对齐线
		vertical-align: -2px; middle值好像是-1或是-2。


课时13
	opacity 透明度。

	伪元素正常情况是inline
	div::before{
		content: "";
		display: inline-block;
		width: 12px;
		height: 11px;
		background-image: url(data: )
			图片是由无数个像素点组成的。 地址请求过来的二进制进行解析。
		background-size: 100% 100%;
		margin-right: 5px;
		/*字的对齐线*/
		vertical-align: -1px;
	}

	例子，姬教授贴吧。
		前后留余，用padding。 保留背景颜色;

	div::after{
		content: "";
		display: inline-block;
		width: 6.5px;
		height: 11.5px;
		background-image: url(data: );
		float: right;
		margin-top: 3px;
	}

	tip:居中
		不用line-height。
		让文字高度 == 容器高度。让容器的padding 把文字夹住。


	题：
		position的值的区别。
		absolute, relative
			脱离原来位置定位，保留原来位置定位。
			都是层模型
			absolute相对于距离自己最近的定位元素进行定位。

		font-size: 20px; 设置的是字体的高。

		水平垂直居中：
			50% 50%, 半个身位。

		opera7 是一个经典版本。之后新版本用了webkit。

		三栏布局。

		去除
			content: "";
			display: block;
			clear: both;
			父级里加个新的 zom: 1。

		使用语义化的html标签及css完成以下布局
			div.wrapper
				img.img

			容器默认宽度320px, 图片100* 100。

			css
				.wrapper{
					width: 320px;
					border: 2px solid black;
				}

				.wrapper:hover{
					width: 400px;
				}
				.wrapper .img{
					width: 100px;
					height: 100px;
					float: left;
				}

				.content1{
					font-size: 20px;
					line-height: 20px;
					height: 40px;
					overflow: hidden;
					color: #333;
					margin-bottom: 8px;
				}

				.content2{
					font-size: 12px;
					line-height: 1.2em
					color: #666;
				}

姬成老师的qq邮箱
	79368009@qq.com。